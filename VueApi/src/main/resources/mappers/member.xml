<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.vue.model.mapper.MemberMapper">

	<resultMap type="memberDto" id="member">
		<result column="userid" property="userid"/>
		<result column="username" property="username"/>
	</resultMap>
	
	<resultMap type="memberDto" id="memberAll" extends="member">
		<result column="userpwd" property="userpwd"/>
		<result column="emailid" property="emailid"/>
		<result column="emaildomain" property="emaildomain"/>
		<result column="joindate" property="joindate"/>
		<result column="isdel" property="isdel"/>
	</resultMap>
	
	<select id="login" parameterType="memberDto" resultType="memberDto">
		select username, userid, email
		from ssafy_member
		where userid = #{userid} and userpwd = #{userpwd} and isdel != 1
	</select>
	
	<select id="userInfo" parameterType="string" resultType="memberDto">
		select username, userid, email, joindate
		from ssafy_member
		where userid = #{userid}
	</select>
	
	<select id="getRefreshToken" parameterType="string" resultType="string">
		select token
		from ssafy_member
		where userid = #{userid}
	</select>
	
	<update id="saveRefreshToken" parameterType="map">
		update ssafy_member
		set token = #{token}
		where userid = #{userid}
	</update>
	
	<update id="deleteRefreshToken" parameterType="map">
		update ssafy_member
		set token = #{token, jdbcType=VARCHAR}
		where userid = #{userid}
	</update>
	
	<select id="listMember" resultMap="memberAll">
		select username, userid, userpwd, email, joindate, isdel
		from ssafy_member
		order by joindate
	</select>
	
	<select id="getMember" parameterType="string" resultMap="memberAll">
		select userid, username, userpwd, email, joindate , isdel
		from ssafy_member
		where userid = #{userid}
	</select>
	
	<update id="updateMember" parameterType="memberDto">
        update ssafy_member
        <trim prefix="set" suffixOverrides=",">
            <if test="username != null">username = #{username},</if>
            <if test="userpwd != null">userpwd = #{userpwd},</if>
            <if test="email != null">email = #{email},</if>
        </trim>
        where userid = #{userid}
    </update>
	
	<delete id="deleteMember" parameterType="String">
		update ssafy_member
		set isdel = 1
		where userid = #{userid}
	</delete>
	
	<insert id="joinMember" parameterType="memberDto">
		insert into ssafy_member (username, userid, userpwd, email, joindate, isdel)
		values (#{username}, #{userid}, #{userpwd}, #{email}, now(), 0)
	</insert>
</mapper>